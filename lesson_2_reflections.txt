When you initialize a repository it creates hidden files which document any subsequent changes to the repository.  No commits are added, butit starts the master branch.


The staging area allows you to add files to the working directory, however if you make a mistake you can reset the directory before you commit to changes in the directory.  


The staging can be used to make sure you have one commit per logical change.  When you make a change, add the file to the staging area, then commit the change.  You can continue working on the file, adding it, and making commits incrementally.


Branches are helpful in keeping your history organized when, as an example you attempt to create a new feature or make a significant change but still want to keep track of the original version (master version).  This allows you to move back to a time before the changes were created or to move between multiple version of the software.  Until a branch is merged with the master branch, any of the changes in the new branch can be tested modified and thrown out without affecting master.


Diagrams help you visualize the branch structure since not all commits are on all branches.  Commits have "parents" and some commits are not reachable from some branches.  Diagrams help us visualize which commits are reachable on a branch.


When to branches are merged together, all the commits from the two branches are mixed together, by timestamp.  We represent them as comming together to one commit in the diagram to show that both branches parent the new commit.


